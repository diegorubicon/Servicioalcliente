'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.17929
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Sakif")>  _
Partial Public Class SourceDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertProvinciaRow(instance As ProvinciaRow)
    End Sub
  Partial Private Sub UpdateProvinciaRow(instance As ProvinciaRow)
    End Sub
  Partial Private Sub DeleteProvinciaRow(instance As ProvinciaRow)
    End Sub
  Partial Private Sub InsertCantonRow(instance As CantonRow)
    End Sub
  Partial Private Sub UpdateCantonRow(instance As CantonRow)
    End Sub
  Partial Private Sub DeleteCantonRow(instance As CantonRow)
    End Sub
  Partial Private Sub InsertDistritoRow(instance As DistritoRow)
    End Sub
  Partial Private Sub UpdateDistritoRow(instance As DistritoRow)
    End Sub
  Partial Private Sub DeleteDistritoRow(instance As DistritoRow)
    End Sub
  Partial Private Sub InsertClienteRow(instance As ClienteRow)
    End Sub
  Partial Private Sub UpdateClienteRow(instance As ClienteRow)
    End Sub
  Partial Private Sub DeleteClienteRow(instance As ClienteRow)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.LayerClients.My.MySettings.Default.SakifConnectionString1, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property ProvinciaRows() As System.Data.Linq.Table(Of ProvinciaRow)
		Get
			Return Me.GetTable(Of ProvinciaRow)
		End Get
	End Property
	
	Public ReadOnly Property CantonRows() As System.Data.Linq.Table(Of CantonRow)
		Get
			Return Me.GetTable(Of CantonRow)
		End Get
	End Property
	
	Public ReadOnly Property DistritoRows() As System.Data.Linq.Table(Of DistritoRow)
		Get
			Return Me.GetTable(Of DistritoRow)
		End Get
	End Property
	
	Public ReadOnly Property ClienteRows() As System.Data.Linq.Table(Of ClienteRow)
		Get
			Return Me.GetTable(Of ClienteRow)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.provincias")>  _
Partial Public Class ProvinciaRow
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _provincia As Decimal
	
	Private _descripcion As String
	
	Private _apartado As String
	
	Private _creado_por As String
	
	Private _creado_el As System.Nullable(Of Date)
	
	Private _modificado_por As String
	
	Private _modificado_el As System.Nullable(Of Date)
	
	Private _CantonRows As EntitySet(Of CantonRow)
	
	Private _ClienteRows As EntitySet(Of ClienteRow)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnprovinciaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnprovinciaChanged()
    End Sub
    Partial Private Sub OndescripcionChanging(value As String)
    End Sub
    Partial Private Sub OndescripcionChanged()
    End Sub
    Partial Private Sub OnapartadoChanging(value As String)
    End Sub
    Partial Private Sub OnapartadoChanged()
    End Sub
    Partial Private Sub Oncreado_porChanging(value As String)
    End Sub
    Partial Private Sub Oncreado_porChanged()
    End Sub
    Partial Private Sub Oncreado_elChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreado_elChanged()
    End Sub
    Partial Private Sub Onmodificado_porChanging(value As String)
    End Sub
    Partial Private Sub Onmodificado_porChanged()
    End Sub
    Partial Private Sub Onmodificado_elChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onmodificado_elChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._CantonRows = New EntitySet(Of CantonRow)(AddressOf Me.attach_CantonRows, AddressOf Me.detach_CantonRows)
		Me._ClienteRows = New EntitySet(Of ClienteRow)(AddressOf Me.attach_ClienteRows, AddressOf Me.detach_ClienteRows)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_provincia", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property provincia() As Decimal
		Get
			Return Me._provincia
		End Get
		Set
			If ((Me._provincia = value)  _
						= false) Then
				Me.OnprovinciaChanging(value)
				Me.SendPropertyChanging
				Me._provincia = value
				Me.SendPropertyChanged("provincia")
				Me.OnprovinciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_descripcion", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property descripcion() As String
		Get
			Return Me._descripcion
		End Get
		Set
			If (String.Equals(Me._descripcion, value) = false) Then
				Me.OndescripcionChanging(value)
				Me.SendPropertyChanging
				Me._descripcion = value
				Me.SendPropertyChanged("descripcion")
				Me.OndescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apartado", DbType:="VarChar(50)")>  _
	Public Property apartado() As String
		Get
			Return Me._apartado
		End Get
		Set
			If (String.Equals(Me._apartado, value) = false) Then
				Me.OnapartadoChanging(value)
				Me.SendPropertyChanging
				Me._apartado = value
				Me.SendPropertyChanged("apartado")
				Me.OnapartadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_creado_por", DbType:="VarChar(15)")>  _
	Public Property creado_por() As String
		Get
			Return Me._creado_por
		End Get
		Set
			If (String.Equals(Me._creado_por, value) = false) Then
				Me.Oncreado_porChanging(value)
				Me.SendPropertyChanging
				Me._creado_por = value
				Me.SendPropertyChanged("creado_por")
				Me.Oncreado_porChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_creado_el", DbType:="DateTime")>  _
	Public Property creado_el() As System.Nullable(Of Date)
		Get
			Return Me._creado_el
		End Get
		Set
			If (Me._creado_el.Equals(value) = false) Then
				Me.Oncreado_elChanging(value)
				Me.SendPropertyChanging
				Me._creado_el = value
				Me.SendPropertyChanged("creado_el")
				Me.Oncreado_elChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modificado_por", DbType:="VarChar(15)")>  _
	Public Property modificado_por() As String
		Get
			Return Me._modificado_por
		End Get
		Set
			If (String.Equals(Me._modificado_por, value) = false) Then
				Me.Onmodificado_porChanging(value)
				Me.SendPropertyChanging
				Me._modificado_por = value
				Me.SendPropertyChanged("modificado_por")
				Me.Onmodificado_porChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modificado_el", DbType:="DateTime")>  _
	Public Property modificado_el() As System.Nullable(Of Date)
		Get
			Return Me._modificado_el
		End Get
		Set
			If (Me._modificado_el.Equals(value) = false) Then
				Me.Onmodificado_elChanging(value)
				Me.SendPropertyChanging
				Me._modificado_el = value
				Me.SendPropertyChanged("modificado_el")
				Me.Onmodificado_elChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ProvinciaRow_CantonRow", Storage:="_CantonRows", ThisKey:="provincia", OtherKey:="provincia")>  _
	Public Property CantonRows() As EntitySet(Of CantonRow)
		Get
			Return Me._CantonRows
		End Get
		Set
			Me._CantonRows.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ProvinciaRow_cliente", Storage:="_ClienteRows", ThisKey:="provincia", OtherKey:="provincia")>  _
	Public Property ClienteRows() As EntitySet(Of ClienteRow)
		Get
			Return Me._ClienteRows
		End Get
		Set
			Me._ClienteRows.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_CantonRows(ByVal entity As CantonRow)
		Me.SendPropertyChanging
		entity.ProvinciaRow = Me
	End Sub
	
	Private Sub detach_CantonRows(ByVal entity As CantonRow)
		Me.SendPropertyChanging
		entity.ProvinciaRow = Nothing
	End Sub
	
	Private Sub attach_ClienteRows(ByVal entity As ClienteRow)
		Me.SendPropertyChanging
		entity.ProvinciaRow = Me
	End Sub
	
	Private Sub detach_ClienteRows(ByVal entity As ClienteRow)
		Me.SendPropertyChanging
		entity.ProvinciaRow = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cantones")>  _
Partial Public Class CantonRow
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _provincia As Decimal
	
	Private _canton As Decimal
	
	Private _apartado As String
	
	Private _descripcion As String
	
	Private _creado_por As String
	
	Private _creado_el As System.Nullable(Of Date)
	
	Private _modificado_por As String
	
	Private _modificado_el As System.Nullable(Of Date)
	
	Private _DistritoRows As EntitySet(Of DistritoRow)
	
	Private _ClienteRows As EntitySet(Of ClienteRow)
	
	Private _ProvinciaRow As EntityRef(Of ProvinciaRow)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnprovinciaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnprovinciaChanged()
    End Sub
    Partial Private Sub OncantonChanging(value As Decimal)
    End Sub
    Partial Private Sub OncantonChanged()
    End Sub
    Partial Private Sub OnapartadoChanging(value As String)
    End Sub
    Partial Private Sub OnapartadoChanged()
    End Sub
    Partial Private Sub OndescripcionChanging(value As String)
    End Sub
    Partial Private Sub OndescripcionChanged()
    End Sub
    Partial Private Sub Oncreado_porChanging(value As String)
    End Sub
    Partial Private Sub Oncreado_porChanged()
    End Sub
    Partial Private Sub Oncreado_elChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreado_elChanged()
    End Sub
    Partial Private Sub Onmodificado_porChanging(value As String)
    End Sub
    Partial Private Sub Onmodificado_porChanged()
    End Sub
    Partial Private Sub Onmodificado_elChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onmodificado_elChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._DistritoRows = New EntitySet(Of DistritoRow)(AddressOf Me.attach_DistritoRows, AddressOf Me.detach_DistritoRows)
		Me._ClienteRows = New EntitySet(Of ClienteRow)(AddressOf Me.attach_ClienteRows, AddressOf Me.detach_ClienteRows)
		Me._ProvinciaRow = CType(Nothing, EntityRef(Of ProvinciaRow))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_provincia", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property provincia() As Decimal
		Get
			Return Me._provincia
		End Get
		Set
			If ((Me._provincia = value)  _
						= false) Then
				If Me._ProvinciaRow.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnprovinciaChanging(value)
				Me.SendPropertyChanging
				Me._provincia = value
				Me.SendPropertyChanged("provincia")
				Me.OnprovinciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_canton", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property canton() As Decimal
		Get
			Return Me._canton
		End Get
		Set
			If ((Me._canton = value)  _
						= false) Then
				Me.OncantonChanging(value)
				Me.SendPropertyChanging
				Me._canton = value
				Me.SendPropertyChanged("canton")
				Me.OncantonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apartado", DbType:="VarChar(50)")>  _
	Public Property apartado() As String
		Get
			Return Me._apartado
		End Get
		Set
			If (String.Equals(Me._apartado, value) = false) Then
				Me.OnapartadoChanging(value)
				Me.SendPropertyChanging
				Me._apartado = value
				Me.SendPropertyChanged("apartado")
				Me.OnapartadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_descripcion", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property descripcion() As String
		Get
			Return Me._descripcion
		End Get
		Set
			If (String.Equals(Me._descripcion, value) = false) Then
				Me.OndescripcionChanging(value)
				Me.SendPropertyChanging
				Me._descripcion = value
				Me.SendPropertyChanged("descripcion")
				Me.OndescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_creado_por", DbType:="VarChar(15)")>  _
	Public Property creado_por() As String
		Get
			Return Me._creado_por
		End Get
		Set
			If (String.Equals(Me._creado_por, value) = false) Then
				Me.Oncreado_porChanging(value)
				Me.SendPropertyChanging
				Me._creado_por = value
				Me.SendPropertyChanged("creado_por")
				Me.Oncreado_porChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_creado_el", DbType:="DateTime")>  _
	Public Property creado_el() As System.Nullable(Of Date)
		Get
			Return Me._creado_el
		End Get
		Set
			If (Me._creado_el.Equals(value) = false) Then
				Me.Oncreado_elChanging(value)
				Me.SendPropertyChanging
				Me._creado_el = value
				Me.SendPropertyChanged("creado_el")
				Me.Oncreado_elChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modificado_por", DbType:="VarChar(15)")>  _
	Public Property modificado_por() As String
		Get
			Return Me._modificado_por
		End Get
		Set
			If (String.Equals(Me._modificado_por, value) = false) Then
				Me.Onmodificado_porChanging(value)
				Me.SendPropertyChanging
				Me._modificado_por = value
				Me.SendPropertyChanged("modificado_por")
				Me.Onmodificado_porChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modificado_el", DbType:="DateTime")>  _
	Public Property modificado_el() As System.Nullable(Of Date)
		Get
			Return Me._modificado_el
		End Get
		Set
			If (Me._modificado_el.Equals(value) = false) Then
				Me.Onmodificado_elChanging(value)
				Me.SendPropertyChanging
				Me._modificado_el = value
				Me.SendPropertyChanged("modificado_el")
				Me.Onmodificado_elChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="CantonRow_DistritoRow", Storage:="_DistritoRows", ThisKey:="provincia,canton", OtherKey:="provincia,canton")>  _
	Public Property DistritoRows() As EntitySet(Of DistritoRow)
		Get
			Return Me._DistritoRows
		End Get
		Set
			Me._DistritoRows.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="CantonRow_cliente", Storage:="_ClienteRows", ThisKey:="provincia,canton", OtherKey:="provincia,canton")>  _
	Public Property ClienteRows() As EntitySet(Of ClienteRow)
		Get
			Return Me._ClienteRows
		End Get
		Set
			Me._ClienteRows.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ProvinciaRow_CantonRow", Storage:="_ProvinciaRow", ThisKey:="provincia", OtherKey:="provincia", IsForeignKey:=true)>  _
	Public Property ProvinciaRow() As ProvinciaRow
		Get
			Return Me._ProvinciaRow.Entity
		End Get
		Set
			Dim previousValue As ProvinciaRow = Me._ProvinciaRow.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ProvinciaRow.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ProvinciaRow.Entity = Nothing
					previousValue.CantonRows.Remove(Me)
				End If
				Me._ProvinciaRow.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.CantonRows.Add(Me)
					Me._provincia = value.provincia
				Else
					Me._provincia = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("ProvinciaRow")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_DistritoRows(ByVal entity As DistritoRow)
		Me.SendPropertyChanging
		entity.CantonRow = Me
	End Sub
	
	Private Sub detach_DistritoRows(ByVal entity As DistritoRow)
		Me.SendPropertyChanging
		entity.CantonRow = Nothing
	End Sub
	
	Private Sub attach_ClienteRows(ByVal entity As ClienteRow)
		Me.SendPropertyChanging
		entity.CantonRow = Me
	End Sub
	
	Private Sub detach_ClienteRows(ByVal entity As ClienteRow)
		Me.SendPropertyChanging
		entity.CantonRow = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.distritos")>  _
Partial Public Class DistritoRow
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _provincia As Decimal
	
	Private _canton As Decimal
	
	Private _distrito As Decimal
	
	Private _apartado As String
	
	Private _descripcion As String
	
	Private _creado_por As String
	
	Private _creado_el As System.Nullable(Of Date)
	
	Private _modificado_por As String
	
	Private _modificado_el As System.Nullable(Of Date)
	
	Private _ClienteRows As EntitySet(Of ClienteRow)
	
	Private _CantonRow As EntityRef(Of CantonRow)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnprovinciaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnprovinciaChanged()
    End Sub
    Partial Private Sub OncantonChanging(value As Decimal)
    End Sub
    Partial Private Sub OncantonChanged()
    End Sub
    Partial Private Sub OndistritoChanging(value As Decimal)
    End Sub
    Partial Private Sub OndistritoChanged()
    End Sub
    Partial Private Sub OnapartadoChanging(value As String)
    End Sub
    Partial Private Sub OnapartadoChanged()
    End Sub
    Partial Private Sub OndescripcionChanging(value As String)
    End Sub
    Partial Private Sub OndescripcionChanged()
    End Sub
    Partial Private Sub Oncreado_porChanging(value As String)
    End Sub
    Partial Private Sub Oncreado_porChanged()
    End Sub
    Partial Private Sub Oncreado_elChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreado_elChanged()
    End Sub
    Partial Private Sub Onmodificado_porChanging(value As String)
    End Sub
    Partial Private Sub Onmodificado_porChanged()
    End Sub
    Partial Private Sub Onmodificado_elChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onmodificado_elChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ClienteRows = New EntitySet(Of ClienteRow)(AddressOf Me.attach_ClienteRows, AddressOf Me.detach_ClienteRows)
		Me._CantonRow = CType(Nothing, EntityRef(Of CantonRow))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_provincia", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property provincia() As Decimal
		Get
			Return Me._provincia
		End Get
		Set
			If ((Me._provincia = value)  _
						= false) Then
				If Me._CantonRow.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnprovinciaChanging(value)
				Me.SendPropertyChanging
				Me._provincia = value
				Me.SendPropertyChanged("provincia")
				Me.OnprovinciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_canton", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property canton() As Decimal
		Get
			Return Me._canton
		End Get
		Set
			If ((Me._canton = value)  _
						= false) Then
				If Me._CantonRow.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OncantonChanging(value)
				Me.SendPropertyChanging
				Me._canton = value
				Me.SendPropertyChanged("canton")
				Me.OncantonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_distrito", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property distrito() As Decimal
		Get
			Return Me._distrito
		End Get
		Set
			If ((Me._distrito = value)  _
						= false) Then
				Me.OndistritoChanging(value)
				Me.SendPropertyChanging
				Me._distrito = value
				Me.SendPropertyChanged("distrito")
				Me.OndistritoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apartado", DbType:="VarChar(50)")>  _
	Public Property apartado() As String
		Get
			Return Me._apartado
		End Get
		Set
			If (String.Equals(Me._apartado, value) = false) Then
				Me.OnapartadoChanging(value)
				Me.SendPropertyChanging
				Me._apartado = value
				Me.SendPropertyChanged("apartado")
				Me.OnapartadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_descripcion", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property descripcion() As String
		Get
			Return Me._descripcion
		End Get
		Set
			If (String.Equals(Me._descripcion, value) = false) Then
				Me.OndescripcionChanging(value)
				Me.SendPropertyChanging
				Me._descripcion = value
				Me.SendPropertyChanged("descripcion")
				Me.OndescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_creado_por", DbType:="VarChar(15)")>  _
	Public Property creado_por() As String
		Get
			Return Me._creado_por
		End Get
		Set
			If (String.Equals(Me._creado_por, value) = false) Then
				Me.Oncreado_porChanging(value)
				Me.SendPropertyChanging
				Me._creado_por = value
				Me.SendPropertyChanged("creado_por")
				Me.Oncreado_porChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_creado_el", DbType:="DateTime")>  _
	Public Property creado_el() As System.Nullable(Of Date)
		Get
			Return Me._creado_el
		End Get
		Set
			If (Me._creado_el.Equals(value) = false) Then
				Me.Oncreado_elChanging(value)
				Me.SendPropertyChanging
				Me._creado_el = value
				Me.SendPropertyChanged("creado_el")
				Me.Oncreado_elChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modificado_por", DbType:="VarChar(15)")>  _
	Public Property modificado_por() As String
		Get
			Return Me._modificado_por
		End Get
		Set
			If (String.Equals(Me._modificado_por, value) = false) Then
				Me.Onmodificado_porChanging(value)
				Me.SendPropertyChanging
				Me._modificado_por = value
				Me.SendPropertyChanged("modificado_por")
				Me.Onmodificado_porChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modificado_el", DbType:="DateTime")>  _
	Public Property modificado_el() As System.Nullable(Of Date)
		Get
			Return Me._modificado_el
		End Get
		Set
			If (Me._modificado_el.Equals(value) = false) Then
				Me.Onmodificado_elChanging(value)
				Me.SendPropertyChanging
				Me._modificado_el = value
				Me.SendPropertyChanged("modificado_el")
				Me.Onmodificado_elChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="DistritoRow_cliente", Storage:="_ClienteRows", ThisKey:="provincia,canton,distrito", OtherKey:="provincia,canton,distrito")>  _
	Public Property ClienteRows() As EntitySet(Of ClienteRow)
		Get
			Return Me._ClienteRows
		End Get
		Set
			Me._ClienteRows.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="CantonRow_DistritoRow", Storage:="_CantonRow", ThisKey:="provincia,canton", OtherKey:="provincia,canton", IsForeignKey:=true)>  _
	Public Property CantonRow() As CantonRow
		Get
			Return Me._CantonRow.Entity
		End Get
		Set
			Dim previousValue As CantonRow = Me._CantonRow.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._CantonRow.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._CantonRow.Entity = Nothing
					previousValue.DistritoRows.Remove(Me)
				End If
				Me._CantonRow.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.DistritoRows.Add(Me)
					Me._provincia = value.provincia
					Me._canton = value.canton
				Else
					Me._provincia = CType(Nothing, Decimal)
					Me._canton = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("CantonRow")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ClienteRows(ByVal entity As ClienteRow)
		Me.SendPropertyChanging
		entity.DistritoRow = Me
	End Sub
	
	Private Sub detach_ClienteRows(ByVal entity As ClienteRow)
		Me.SendPropertyChanging
		entity.DistritoRow = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.clientes")>  _
Partial Public Class ClienteRow
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _fecha As System.Nullable(Of Date)
	
	Private _cliente As String
	
	Private _nombre As String
	
	Private _apellido_01 As String
	
	Private _apellido_02 As String
	
	Private _tipo As Decimal
	
	Private _zona As String
	
	Private _tipo_de_identificacion As String
	
	Private _genero As System.Nullable(Of Integer)
	
	Private _estado As Decimal
	
	Private _provincia As System.Nullable(Of Decimal)
	
	Private _canton As System.Nullable(Of Decimal)
	
	Private _distrito As System.Nullable(Of Decimal)
	
	Private _Barrio As System.Nullable(Of Decimal)
	
	Private _identificacion As String
	
	Private _descripcion As String
	
	Private _fecha_nacimiento As System.Nullable(Of Date)
	
	Private _direccion As String
	
	Private _telefono_01 As String
	
	Private _telefono_02 As String
	
	Private _telefono_03 As String
	
	Private _telefono_04 As String
	
	Private _fax As String
	
	Private _email As String
	
	Private _representante As String
	
	Private _limite_de_credito As System.Nullable(Of Decimal)
	
	Private _descuento_general As System.Nullable(Of Decimal)
	
	Private _dias_plazo As System.Nullable(Of Decimal)
	
	Private _creado_por As String
	
	Private _creado_el As System.Nullable(Of Date)
	
	Private _modificado_por As String
	
	Private _modificado_el As System.Nullable(Of Date)
	
	Private _vendedor As String
	
	Private _acepta_impuesto As System.Nullable(Of Integer)
	
	Private _observaciones As String
	
	Private _mostrar_obs_fact As System.Nullable(Of Integer)
	
	Private _compania As System.Nullable(Of Decimal)
	
	Private _animo As System.Nullable(Of Decimal)
	
	Private _correo_actualizado_por As String
	
	Private _correo_actualizado_el As System.Nullable(Of Date)
	
	Private _correo_anterior As String
	
	Private _CedulaCorrecta As System.Nullable(Of Integer)
	
	Private _venta_mes_anterior As System.Nullable(Of Decimal)
	
	Private _saldo_vendido As System.Nullable(Of Decimal)
	
	Private _CantonRow As EntityRef(Of CantonRow)
	
	Private _DistritoRow As EntityRef(Of DistritoRow)
	
	Private _ProvinciaRow As EntityRef(Of ProvinciaRow)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnfechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfechaChanged()
    End Sub
    Partial Private Sub OnclienteChanging(value As String)
    End Sub
    Partial Private Sub OnclienteChanged()
    End Sub
    Partial Private Sub OnnombreChanging(value As String)
    End Sub
    Partial Private Sub OnnombreChanged()
    End Sub
    Partial Private Sub Onapellido_01Changing(value As String)
    End Sub
    Partial Private Sub Onapellido_01Changed()
    End Sub
    Partial Private Sub Onapellido_02Changing(value As String)
    End Sub
    Partial Private Sub Onapellido_02Changed()
    End Sub
    Partial Private Sub OntipoChanging(value As Decimal)
    End Sub
    Partial Private Sub OntipoChanged()
    End Sub
    Partial Private Sub OnzonaChanging(value As String)
    End Sub
    Partial Private Sub OnzonaChanged()
    End Sub
    Partial Private Sub Ontipo_de_identificacionChanging(value As String)
    End Sub
    Partial Private Sub Ontipo_de_identificacionChanged()
    End Sub
    Partial Private Sub OngeneroChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OngeneroChanged()
    End Sub
    Partial Private Sub OnestadoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnestadoChanged()
    End Sub
    Partial Private Sub OnprovinciaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnprovinciaChanged()
    End Sub
    Partial Private Sub OncantonChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OncantonChanged()
    End Sub
    Partial Private Sub OndistritoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OndistritoChanged()
    End Sub
    Partial Private Sub OnBarrioChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBarrioChanged()
    End Sub
    Partial Private Sub OnidentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnidentificacionChanged()
    End Sub
    Partial Private Sub OndescripcionChanging(value As String)
    End Sub
    Partial Private Sub OndescripcionChanged()
    End Sub
    Partial Private Sub Onfecha_nacimientoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onfecha_nacimientoChanged()
    End Sub
    Partial Private Sub OndireccionChanging(value As String)
    End Sub
    Partial Private Sub OndireccionChanged()
    End Sub
    Partial Private Sub Ontelefono_01Changing(value As String)
    End Sub
    Partial Private Sub Ontelefono_01Changed()
    End Sub
    Partial Private Sub Ontelefono_02Changing(value As String)
    End Sub
    Partial Private Sub Ontelefono_02Changed()
    End Sub
    Partial Private Sub Ontelefono_03Changing(value As String)
    End Sub
    Partial Private Sub Ontelefono_03Changed()
    End Sub
    Partial Private Sub Ontelefono_04Changing(value As String)
    End Sub
    Partial Private Sub Ontelefono_04Changed()
    End Sub
    Partial Private Sub OnfaxChanging(value As String)
    End Sub
    Partial Private Sub OnfaxChanged()
    End Sub
    Partial Private Sub OnemailChanging(value As String)
    End Sub
    Partial Private Sub OnemailChanged()
    End Sub
    Partial Private Sub OnrepresentanteChanging(value As String)
    End Sub
    Partial Private Sub OnrepresentanteChanged()
    End Sub
    Partial Private Sub Onlimite_de_creditoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onlimite_de_creditoChanged()
    End Sub
    Partial Private Sub Ondescuento_generalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondescuento_generalChanged()
    End Sub
    Partial Private Sub Ondias_plazoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondias_plazoChanged()
    End Sub
    Partial Private Sub Oncreado_porChanging(value As String)
    End Sub
    Partial Private Sub Oncreado_porChanged()
    End Sub
    Partial Private Sub Oncreado_elChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreado_elChanged()
    End Sub
    Partial Private Sub Onmodificado_porChanging(value As String)
    End Sub
    Partial Private Sub Onmodificado_porChanged()
    End Sub
    Partial Private Sub Onmodificado_elChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onmodificado_elChanged()
    End Sub
    Partial Private Sub OnvendedorChanging(value As String)
    End Sub
    Partial Private Sub OnvendedorChanged()
    End Sub
    Partial Private Sub Onacepta_impuestoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onacepta_impuestoChanged()
    End Sub
    Partial Private Sub OnobservacionesChanging(value As String)
    End Sub
    Partial Private Sub OnobservacionesChanged()
    End Sub
    Partial Private Sub Onmostrar_obs_factChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onmostrar_obs_factChanged()
    End Sub
    Partial Private Sub OncompaniaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OncompaniaChanged()
    End Sub
    Partial Private Sub OnanimoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnanimoChanged()
    End Sub
    Partial Private Sub Oncorreo_actualizado_porChanging(value As String)
    End Sub
    Partial Private Sub Oncorreo_actualizado_porChanged()
    End Sub
    Partial Private Sub Oncorreo_actualizado_elChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncorreo_actualizado_elChanged()
    End Sub
    Partial Private Sub Oncorreo_anteriorChanging(value As String)
    End Sub
    Partial Private Sub Oncorreo_anteriorChanged()
    End Sub
    Partial Private Sub OnCedulaCorrectaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCedulaCorrectaChanged()
    End Sub
    Partial Private Sub Onventa_mes_anteriorChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onventa_mes_anteriorChanged()
    End Sub
    Partial Private Sub Onsaldo_vendidoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onsaldo_vendidoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._CantonRow = CType(Nothing, EntityRef(Of CantonRow))
		Me._DistritoRow = CType(Nothing, EntityRef(Of DistritoRow))
		Me._ProvinciaRow = CType(Nothing, EntityRef(Of ProvinciaRow))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fecha", DbType:="DateTime")>  _
	Public Property fecha() As System.Nullable(Of Date)
		Get
			Return Me._fecha
		End Get
		Set
			If (Me._fecha.Equals(value) = false) Then
				Me.OnfechaChanging(value)
				Me.SendPropertyChanging
				Me._fecha = value
				Me.SendPropertyChanged("fecha")
				Me.OnfechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cliente", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property cliente() As String
		Get
			Return Me._cliente
		End Get
		Set
			If (String.Equals(Me._cliente, value) = false) Then
				Me.OnclienteChanging(value)
				Me.SendPropertyChanging
				Me._cliente = value
				Me.SendPropertyChanged("cliente")
				Me.OnclienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nombre", DbType:="VarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property nombre() As String
		Get
			Return Me._nombre
		End Get
		Set
			If (String.Equals(Me._nombre, value) = false) Then
				Me.OnnombreChanging(value)
				Me.SendPropertyChanging
				Me._nombre = value
				Me.SendPropertyChanged("nombre")
				Me.OnnombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apellido_01", DbType:="VarChar(255)")>  _
	Public Property apellido_01() As String
		Get
			Return Me._apellido_01
		End Get
		Set
			If (String.Equals(Me._apellido_01, value) = false) Then
				Me.Onapellido_01Changing(value)
				Me.SendPropertyChanging
				Me._apellido_01 = value
				Me.SendPropertyChanged("apellido_01")
				Me.Onapellido_01Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apellido_02", DbType:="VarChar(255)")>  _
	Public Property apellido_02() As String
		Get
			Return Me._apellido_02
		End Get
		Set
			If (String.Equals(Me._apellido_02, value) = false) Then
				Me.Onapellido_02Changing(value)
				Me.SendPropertyChanging
				Me._apellido_02 = value
				Me.SendPropertyChanged("apellido_02")
				Me.Onapellido_02Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tipo", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property tipo() As Decimal
		Get
			Return Me._tipo
		End Get
		Set
			If ((Me._tipo = value)  _
						= false) Then
				Me.OntipoChanging(value)
				Me.SendPropertyChanging
				Me._tipo = value
				Me.SendPropertyChanged("tipo")
				Me.OntipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_zona", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property zona() As String
		Get
			Return Me._zona
		End Get
		Set
			If (String.Equals(Me._zona, value) = false) Then
				Me.OnzonaChanging(value)
				Me.SendPropertyChanging
				Me._zona = value
				Me.SendPropertyChanged("zona")
				Me.OnzonaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tipo_de_identificacion", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property tipo_de_identificacion() As String
		Get
			Return Me._tipo_de_identificacion
		End Get
		Set
			If (String.Equals(Me._tipo_de_identificacion, value) = false) Then
				Me.Ontipo_de_identificacionChanging(value)
				Me.SendPropertyChanging
				Me._tipo_de_identificacion = value
				Me.SendPropertyChanged("tipo_de_identificacion")
				Me.Ontipo_de_identificacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_genero", DbType:="Int")>  _
	Public Property genero() As System.Nullable(Of Integer)
		Get
			Return Me._genero
		End Get
		Set
			If (Me._genero.Equals(value) = false) Then
				Me.OngeneroChanging(value)
				Me.SendPropertyChanging
				Me._genero = value
				Me.SendPropertyChanged("genero")
				Me.OngeneroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_estado", DbType:="Decimal(4,0) NOT NULL")>  _
	Public Property estado() As Decimal
		Get
			Return Me._estado
		End Get
		Set
			If ((Me._estado = value)  _
						= false) Then
				Me.OnestadoChanging(value)
				Me.SendPropertyChanging
				Me._estado = value
				Me.SendPropertyChanged("estado")
				Me.OnestadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_provincia", DbType:="Decimal(18,0)")>  _
	Public Property provincia() As System.Nullable(Of Decimal)
		Get
			Return Me._provincia
		End Get
		Set
			If (Me._provincia.Equals(value) = false) Then
				If ((Me._CantonRow.HasLoadedOrAssignedValue OrElse Me._DistritoRow.HasLoadedOrAssignedValue)  _
							OrElse Me._ProvinciaRow.HasLoadedOrAssignedValue) Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnprovinciaChanging(value)
				Me.SendPropertyChanging
				Me._provincia = value
				Me.SendPropertyChanged("provincia")
				Me.OnprovinciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_canton", DbType:="Decimal(18,0)")>  _
	Public Property canton() As System.Nullable(Of Decimal)
		Get
			Return Me._canton
		End Get
		Set
			If (Me._canton.Equals(value) = false) Then
				If (Me._CantonRow.HasLoadedOrAssignedValue OrElse Me._DistritoRow.HasLoadedOrAssignedValue) Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OncantonChanging(value)
				Me.SendPropertyChanging
				Me._canton = value
				Me.SendPropertyChanged("canton")
				Me.OncantonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_distrito", DbType:="Decimal(18,0)")>  _
	Public Property distrito() As System.Nullable(Of Decimal)
		Get
			Return Me._distrito
		End Get
		Set
			If (Me._distrito.Equals(value) = false) Then
				If Me._DistritoRow.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OndistritoChanging(value)
				Me.SendPropertyChanging
				Me._distrito = value
				Me.SendPropertyChanged("distrito")
				Me.OndistritoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Barrio", DbType:="Decimal(18,0)")>  _
	Public Property Barrio() As System.Nullable(Of Decimal)
		Get
			Return Me._Barrio
		End Get
		Set
			If (Me._Barrio.Equals(value) = false) Then
				Me.OnBarrioChanging(value)
				Me.SendPropertyChanging
				Me._Barrio = value
				Me.SendPropertyChanged("Barrio")
				Me.OnBarrioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_identificacion", DbType:="VarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property identificacion() As String
		Get
			Return Me._identificacion
		End Get
		Set
			If (String.Equals(Me._identificacion, value) = false) Then
				Me.OnidentificacionChanging(value)
				Me.SendPropertyChanging
				Me._identificacion = value
				Me.SendPropertyChanged("identificacion")
				Me.OnidentificacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_descripcion", DbType:="VarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property descripcion() As String
		Get
			Return Me._descripcion
		End Get
		Set
			If (String.Equals(Me._descripcion, value) = false) Then
				Me.OndescripcionChanging(value)
				Me.SendPropertyChanging
				Me._descripcion = value
				Me.SendPropertyChanged("descripcion")
				Me.OndescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fecha_nacimiento", DbType:="DateTime")>  _
	Public Property fecha_nacimiento() As System.Nullable(Of Date)
		Get
			Return Me._fecha_nacimiento
		End Get
		Set
			If (Me._fecha_nacimiento.Equals(value) = false) Then
				Me.Onfecha_nacimientoChanging(value)
				Me.SendPropertyChanging
				Me._fecha_nacimiento = value
				Me.SendPropertyChanged("fecha_nacimiento")
				Me.Onfecha_nacimientoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_direccion", DbType:="VarChar(255)")>  _
	Public Property direccion() As String
		Get
			Return Me._direccion
		End Get
		Set
			If (String.Equals(Me._direccion, value) = false) Then
				Me.OndireccionChanging(value)
				Me.SendPropertyChanging
				Me._direccion = value
				Me.SendPropertyChanged("direccion")
				Me.OndireccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_telefono_01", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property telefono_01() As String
		Get
			Return Me._telefono_01
		End Get
		Set
			If (String.Equals(Me._telefono_01, value) = false) Then
				Me.Ontelefono_01Changing(value)
				Me.SendPropertyChanging
				Me._telefono_01 = value
				Me.SendPropertyChanged("telefono_01")
				Me.Ontelefono_01Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_telefono_02", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property telefono_02() As String
		Get
			Return Me._telefono_02
		End Get
		Set
			If (String.Equals(Me._telefono_02, value) = false) Then
				Me.Ontelefono_02Changing(value)
				Me.SendPropertyChanging
				Me._telefono_02 = value
				Me.SendPropertyChanged("telefono_02")
				Me.Ontelefono_02Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_telefono_03", DbType:="VarChar(50)")>  _
	Public Property telefono_03() As String
		Get
			Return Me._telefono_03
		End Get
		Set
			If (String.Equals(Me._telefono_03, value) = false) Then
				Me.Ontelefono_03Changing(value)
				Me.SendPropertyChanging
				Me._telefono_03 = value
				Me.SendPropertyChanged("telefono_03")
				Me.Ontelefono_03Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_telefono_04", DbType:="VarChar(50)")>  _
	Public Property telefono_04() As String
		Get
			Return Me._telefono_04
		End Get
		Set
			If (String.Equals(Me._telefono_04, value) = false) Then
				Me.Ontelefono_04Changing(value)
				Me.SendPropertyChanging
				Me._telefono_04 = value
				Me.SendPropertyChanged("telefono_04")
				Me.Ontelefono_04Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property fax() As String
		Get
			Return Me._fax
		End Get
		Set
			If (String.Equals(Me._fax, value) = false) Then
				Me.OnfaxChanging(value)
				Me.SendPropertyChanging
				Me._fax = value
				Me.SendPropertyChanged("fax")
				Me.OnfaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_email", DbType:="VarChar(100)")>  _
	Public Property email() As String
		Get
			Return Me._email
		End Get
		Set
			If (String.Equals(Me._email, value) = false) Then
				Me.OnemailChanging(value)
				Me.SendPropertyChanging
				Me._email = value
				Me.SendPropertyChanged("email")
				Me.OnemailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_representante", DbType:="VarChar(100)")>  _
	Public Property representante() As String
		Get
			Return Me._representante
		End Get
		Set
			If (String.Equals(Me._representante, value) = false) Then
				Me.OnrepresentanteChanging(value)
				Me.SendPropertyChanging
				Me._representante = value
				Me.SendPropertyChanged("representante")
				Me.OnrepresentanteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_limite_de_credito", DbType:="Money")>  _
	Public Property limite_de_credito() As System.Nullable(Of Decimal)
		Get
			Return Me._limite_de_credito
		End Get
		Set
			If (Me._limite_de_credito.Equals(value) = false) Then
				Me.Onlimite_de_creditoChanging(value)
				Me.SendPropertyChanging
				Me._limite_de_credito = value
				Me.SendPropertyChanged("limite_de_credito")
				Me.Onlimite_de_creditoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_descuento_general", DbType:="Decimal(18,0)")>  _
	Public Property descuento_general() As System.Nullable(Of Decimal)
		Get
			Return Me._descuento_general
		End Get
		Set
			If (Me._descuento_general.Equals(value) = false) Then
				Me.Ondescuento_generalChanging(value)
				Me.SendPropertyChanging
				Me._descuento_general = value
				Me.SendPropertyChanged("descuento_general")
				Me.Ondescuento_generalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dias_plazo", DbType:="Decimal(18,0)")>  _
	Public Property dias_plazo() As System.Nullable(Of Decimal)
		Get
			Return Me._dias_plazo
		End Get
		Set
			If (Me._dias_plazo.Equals(value) = false) Then
				Me.Ondias_plazoChanging(value)
				Me.SendPropertyChanging
				Me._dias_plazo = value
				Me.SendPropertyChanged("dias_plazo")
				Me.Ondias_plazoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_creado_por", DbType:="VarChar(255)")>  _
	Public Property creado_por() As String
		Get
			Return Me._creado_por
		End Get
		Set
			If (String.Equals(Me._creado_por, value) = false) Then
				Me.Oncreado_porChanging(value)
				Me.SendPropertyChanging
				Me._creado_por = value
				Me.SendPropertyChanged("creado_por")
				Me.Oncreado_porChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_creado_el", DbType:="DateTime")>  _
	Public Property creado_el() As System.Nullable(Of Date)
		Get
			Return Me._creado_el
		End Get
		Set
			If (Me._creado_el.Equals(value) = false) Then
				Me.Oncreado_elChanging(value)
				Me.SendPropertyChanging
				Me._creado_el = value
				Me.SendPropertyChanged("creado_el")
				Me.Oncreado_elChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modificado_por", DbType:="VarChar(255)")>  _
	Public Property modificado_por() As String
		Get
			Return Me._modificado_por
		End Get
		Set
			If (String.Equals(Me._modificado_por, value) = false) Then
				Me.Onmodificado_porChanging(value)
				Me.SendPropertyChanging
				Me._modificado_por = value
				Me.SendPropertyChanged("modificado_por")
				Me.Onmodificado_porChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modificado_el", DbType:="DateTime")>  _
	Public Property modificado_el() As System.Nullable(Of Date)
		Get
			Return Me._modificado_el
		End Get
		Set
			If (Me._modificado_el.Equals(value) = false) Then
				Me.Onmodificado_elChanging(value)
				Me.SendPropertyChanging
				Me._modificado_el = value
				Me.SendPropertyChanged("modificado_el")
				Me.Onmodificado_elChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vendedor", DbType:="VarChar(30)")>  _
	Public Property vendedor() As String
		Get
			Return Me._vendedor
		End Get
		Set
			If (String.Equals(Me._vendedor, value) = false) Then
				Me.OnvendedorChanging(value)
				Me.SendPropertyChanging
				Me._vendedor = value
				Me.SendPropertyChanged("vendedor")
				Me.OnvendedorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_acepta_impuesto", DbType:="Int")>  _
	Public Property acepta_impuesto() As System.Nullable(Of Integer)
		Get
			Return Me._acepta_impuesto
		End Get
		Set
			If (Me._acepta_impuesto.Equals(value) = false) Then
				Me.Onacepta_impuestoChanging(value)
				Me.SendPropertyChanging
				Me._acepta_impuesto = value
				Me.SendPropertyChanged("acepta_impuesto")
				Me.Onacepta_impuestoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_observaciones", DbType:="VarChar(500)")>  _
	Public Property observaciones() As String
		Get
			Return Me._observaciones
		End Get
		Set
			If (String.Equals(Me._observaciones, value) = false) Then
				Me.OnobservacionesChanging(value)
				Me.SendPropertyChanging
				Me._observaciones = value
				Me.SendPropertyChanged("observaciones")
				Me.OnobservacionesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mostrar_obs_fact", DbType:="Int")>  _
	Public Property mostrar_obs_fact() As System.Nullable(Of Integer)
		Get
			Return Me._mostrar_obs_fact
		End Get
		Set
			If (Me._mostrar_obs_fact.Equals(value) = false) Then
				Me.Onmostrar_obs_factChanging(value)
				Me.SendPropertyChanging
				Me._mostrar_obs_fact = value
				Me.SendPropertyChanged("mostrar_obs_fact")
				Me.Onmostrar_obs_factChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_compania", DbType:="Decimal(18,0)")>  _
	Public Property compania() As System.Nullable(Of Decimal)
		Get
			Return Me._compania
		End Get
		Set
			If (Me._compania.Equals(value) = false) Then
				Me.OncompaniaChanging(value)
				Me.SendPropertyChanging
				Me._compania = value
				Me.SendPropertyChanged("compania")
				Me.OncompaniaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_animo", DbType:="Decimal(18,0)")>  _
	Public Property animo() As System.Nullable(Of Decimal)
		Get
			Return Me._animo
		End Get
		Set
			If (Me._animo.Equals(value) = false) Then
				Me.OnanimoChanging(value)
				Me.SendPropertyChanging
				Me._animo = value
				Me.SendPropertyChanged("animo")
				Me.OnanimoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_correo_actualizado_por", DbType:="VarChar(50)")>  _
	Public Property correo_actualizado_por() As String
		Get
			Return Me._correo_actualizado_por
		End Get
		Set
			If (String.Equals(Me._correo_actualizado_por, value) = false) Then
				Me.Oncorreo_actualizado_porChanging(value)
				Me.SendPropertyChanging
				Me._correo_actualizado_por = value
				Me.SendPropertyChanged("correo_actualizado_por")
				Me.Oncorreo_actualizado_porChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_correo_actualizado_el", DbType:="DateTime")>  _
	Public Property correo_actualizado_el() As System.Nullable(Of Date)
		Get
			Return Me._correo_actualizado_el
		End Get
		Set
			If (Me._correo_actualizado_el.Equals(value) = false) Then
				Me.Oncorreo_actualizado_elChanging(value)
				Me.SendPropertyChanging
				Me._correo_actualizado_el = value
				Me.SendPropertyChanged("correo_actualizado_el")
				Me.Oncorreo_actualizado_elChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_correo_anterior", DbType:="VarChar(200)")>  _
	Public Property correo_anterior() As String
		Get
			Return Me._correo_anterior
		End Get
		Set
			If (String.Equals(Me._correo_anterior, value) = false) Then
				Me.Oncorreo_anteriorChanging(value)
				Me.SendPropertyChanging
				Me._correo_anterior = value
				Me.SendPropertyChanged("correo_anterior")
				Me.Oncorreo_anteriorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CedulaCorrecta", DbType:="Int")>  _
	Public Property CedulaCorrecta() As System.Nullable(Of Integer)
		Get
			Return Me._CedulaCorrecta
		End Get
		Set
			If (Me._CedulaCorrecta.Equals(value) = false) Then
				Me.OnCedulaCorrectaChanging(value)
				Me.SendPropertyChanging
				Me._CedulaCorrecta = value
				Me.SendPropertyChanged("CedulaCorrecta")
				Me.OnCedulaCorrectaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_venta_mes_anterior", DbType:="Money")>  _
	Public Property venta_mes_anterior() As System.Nullable(Of Decimal)
		Get
			Return Me._venta_mes_anterior
		End Get
		Set
			If (Me._venta_mes_anterior.Equals(value) = false) Then
				Me.Onventa_mes_anteriorChanging(value)
				Me.SendPropertyChanging
				Me._venta_mes_anterior = value
				Me.SendPropertyChanged("venta_mes_anterior")
				Me.Onventa_mes_anteriorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_saldo_vendido", DbType:="Money")>  _
	Public Property saldo_vendido() As System.Nullable(Of Decimal)
		Get
			Return Me._saldo_vendido
		End Get
		Set
			If (Me._saldo_vendido.Equals(value) = false) Then
				Me.Onsaldo_vendidoChanging(value)
				Me.SendPropertyChanging
				Me._saldo_vendido = value
				Me.SendPropertyChanged("saldo_vendido")
				Me.Onsaldo_vendidoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="CantonRow_cliente", Storage:="_CantonRow", ThisKey:="provincia,canton", OtherKey:="provincia,canton", IsForeignKey:=true)>  _
	Public Property CantonRow() As CantonRow
		Get
			Return Me._CantonRow.Entity
		End Get
		Set
			Dim previousValue As CantonRow = Me._CantonRow.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._CantonRow.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._CantonRow.Entity = Nothing
					previousValue.ClienteRows.Remove(Me)
				End If
				Me._CantonRow.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ClienteRows.Add(Me)
					Me._provincia = value.provincia
					Me._canton = value.canton
				Else
					Me._provincia = CType(Nothing, Nullable(Of Decimal))
					Me._canton = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("CantonRow")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="DistritoRow_cliente", Storage:="_DistritoRow", ThisKey:="provincia,canton,distrito", OtherKey:="provincia,canton,distrito", IsForeignKey:=true)>  _
	Public Property DistritoRow() As DistritoRow
		Get
			Return Me._DistritoRow.Entity
		End Get
		Set
			Dim previousValue As DistritoRow = Me._DistritoRow.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._DistritoRow.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._DistritoRow.Entity = Nothing
					previousValue.ClienteRows.Remove(Me)
				End If
				Me._DistritoRow.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ClienteRows.Add(Me)
					Me._provincia = value.provincia
					Me._canton = value.canton
					Me._distrito = value.distrito
				Else
					Me._provincia = CType(Nothing, Nullable(Of Decimal))
					Me._canton = CType(Nothing, Nullable(Of Decimal))
					Me._distrito = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("DistritoRow")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ProvinciaRow_cliente", Storage:="_ProvinciaRow", ThisKey:="provincia", OtherKey:="provincia", IsForeignKey:=true)>  _
	Public Property ProvinciaRow() As ProvinciaRow
		Get
			Return Me._ProvinciaRow.Entity
		End Get
		Set
			Dim previousValue As ProvinciaRow = Me._ProvinciaRow.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ProvinciaRow.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ProvinciaRow.Entity = Nothing
					previousValue.ClienteRows.Remove(Me)
				End If
				Me._ProvinciaRow.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ClienteRows.Add(Me)
					Me._provincia = value.provincia
				Else
					Me._provincia = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("ProvinciaRow")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
